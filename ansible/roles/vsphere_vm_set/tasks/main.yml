---
# high level task flow for role

- name: create output dictionary and resource count caches for scheduling
  ansible.builtin.set_fact:
    vm_set_cluster_resoruces: {}
    vm_set_datastore_resources: {}
    vm_set_output:
      machines: []

- name: handle vm folder on present state pre scaling
  ansible.builtin.import_tasks: handle_folder.yml
  when: cluster_state == "present" and vm_folder != ""

- name: read existing vms for vm set
  ansible.builtin.import_tasks: load_vms.yml

- name: debug vm list
  ansible.builtin.debug:
    msg: "{{ vm_set_output }}"

- name: handle vm set scale down
  ansible.builtin.import_tasks: scale_down.yml
  when: cluster_state == "absent" or vm_set_output.machines|length > vm_count

- name: handle vm set scale up
  ansible.builtin.import_tasks: scale_up.yml
  when: cluster_state == "present" and vm_set_output.machines|length < vm_count

- name: handle vm folder on absent state post scaling
  ansible.builtin.import_tasks: handle_folder.yml
  when: cluster_state == "absent" and vm_folder != ""
