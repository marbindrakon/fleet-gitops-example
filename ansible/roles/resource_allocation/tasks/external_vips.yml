- name: set external VIPs for shared frontend
  ansible.builtin.set_fact:
    external_api_vip: "{{ loadbalancer_api_shared_vip }}"
    external_ingress_vip: "{{ loadbalancer_ingress_shared_vip }}"
  when:
    - loadbalancer_type == "external" or expose_internal_loadbalancers|bool
    - loadbalancer_frontend_mode == "shared"

- name: query existing external VIPs
  ansible.builtin.set_fact:
    nb_existing_ext_api_query: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses', api_filter='description=' + cluster_name + '-External-API') | items2dict}}"
    nb_existing_ext_ingress_query: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses', api_filter='description=' + cluster_name + '-External-Ingress') | items2dict }}"
  when:
    - loadbalancer_type == "external" or expose_internal_loadbalancers|bool
    - loadbalancer_frontend_mode == "dedicated"

- name: set external API VIP based on existing records
  ansible.builtin.set_fact:
    external_api_vip: "{{ nb_existing_ext_api_query.values() | map(attribute='address') | first | ansible.netcommon.ipaddr('address') }}"
    external_api_cidr: "{{ nb_existing_ext_api_query.values() | map(attribute='address') | first }}"
  when:
    - nb_existing_ext_api_query is defined 
    - nb_existing_ext_api_query | length > 0

- name: set external ingress VIP based on existing records
  ansible.builtin.set_fact:
    external_ingress_vip: "{{ nb_existing_ext_ingress_query.values() | map(attribute='address') | first | ansible.netcommon.ipaddr('address') }}"
    external_ingress_cidr: "{{ nb_existing_ext_ingress_query.values() | map(attribute='address') | first }}"
  when:
    - nb_existing_ext_ingress_query is defined 
    - nb_existing_ext_ingress_query | length > 0

- name: allocate external API VIP
  netbox.netbox.netbox_ip_address:
    netbox_url: "{{ lookup('env', 'NETBOX_URL') }}"
    netbox_token: "{{ lookup('env', 'NETBOX_TOKEN') }}"
    state: new
    data:
      prefix: "{{ external_vip_prefix }}"
      role: VIP
      dns_name: "api.{{ cluster_name }}.{{ base_domain }}"
      description: "{{ cluster_name }}-External-API"
  register: nb_external_api_create
  when:
    - loadbalancer_type == "external" or expose_internal_loadbalancers|bool
    - loadbalancer_frontend_mode == "dedicated"
    - cluster_state == "present"
    - external_api_vip is not defined

- name: set external API VIP based on new record
  ansible.builtin.set_fact:
    external_api_vip: "{{ nb_external_api_create.ip_address.address | ansible.netcommon.ipaddr('address') }}"
    external_api_cidr: "{{ nb_external_api_create.ip_address.address }}"
  when:
    - external_api_vip is not defined
    - nb_external_api_create is defined
    - nb_external_api_create.ip_address is defined

- name: allocate external ingress VIP
  netbox.netbox.netbox_ip_address:
    netbox_url: "{{ lookup('env', 'NETBOX_URL') }}"
    netbox_token: "{{ lookup('env', 'NETBOX_TOKEN') }}"
    state: new
    data:
      prefix: "{{ external_vip_prefix }}"
      role: VIP
      dns_name: "apps.{{ cluster_name }}.{{ base_domain }}"
      description: "{{ cluster_name }}-External-Ingress"
  register: nb_external_ingress_create
  when:
    - loadbalancer_type == "external" or expose_internal_loadbalancers|bool
    - loadbalancer_frontend_mode == "dedicated"
    - cluster_state == "present"
    - external_ingress_vip is not defined

- name: set external ingress VIP based on new record
  set_fact:
    external_ingress_vip: "{{ nb_external_ingress_create.ip_address.address | ansible.netcommon.ipaddr('address') }}"
    external_ingress_cidr: "{{ nb_external_ingress_create.ip_address.address }}"
  when:
    - external_ingress_vip is not defined 
    - nb_external_ingress_create is defined
    - nb_external_ingress_create.ip_address is defined

- name: deallocate external API VIP
  netbox.netbox.netbox_ip_address:
    netbox_url: "{{ lookup('env', 'NETBOX_URL') }}"
    netbox_token: "{{ lookup('env', 'NETBOX_TOKEN') }}"
    state: absent
    data:
      address: "{{ external_api_cidr }}"
  register: nb_external_api_create
  when:
    - loadbalancer_type == "external" or expose_internal_loadbalancers|bool
    - loadbalancer_frontend_mode == "dedicated"
    - cluster_state == "absent"
    - external_api_vip is defined

- name: deallocate external ingress VIP
  netbox.netbox.netbox_ip_address:
    netbox_url: "{{ lookup('env', 'NETBOX_URL') }}"
    netbox_token: "{{ lookup('env', 'NETBOX_TOKEN') }}"
    state: absent
    data:
      address: "{{ external_ingress_cidr }}"
  register: nb_external_ingress_create
  when:
    - loadbalancer_type == "external" or expose_internal_loadbalancers|bool
    - loadbalancer_frontend_mode == "dedicated"
    - cluster_state == "absent"
    - external_ingress_vip is defined
